version: "3"

output: prefixed

silent: true

dotenv: [".env"]

vars:
  GIT_REV:
    sh: git rev-parse --short HEAD
  GIT_TAG:
    sh: git describe --tags --abbrev=0
  GOOS:
    sh: go env GOOS
  GOARCH:
    sh: go env GOARCH
  LDFLAGS: -s -w -X github.com/vaclav-dvorak/veribi-cli/cmd/veribi.version={{.GIT_TAG}}+{{.GIT_REV}}
  FILE: veribi
  PACKAGE: "{{.FILE}}_{{.GOOS}}_{{.GOARCH}}"

tasks:
  prepare:
    desc: Download dependencies and prepare dev env
    cmds:
      - pre-commit install
      - go mod download
      - go mod tidy
      - go mod vendor

  build:
    desc: Builds the cli binary
    cmds:
      - go build -trimpath -ldflags="{{.LDFLAGS}}" -o ./bin/{{.FILE}} main.go

  build:ci:
    desc: Optimized build for CI
    cmds:
      - echo {{.GOOS}}/{{.GOARCH}}
      - go build -trimpath -ldflags="{{.LDFLAGS}}" -o ./{{.FILE}}{{.exeExt}} main.go
      - tar -czf {{.PACKAGE}}.tar.gz ./{{.FILE}}{{.exeExt}} ./LICENSE

  release:
    desc: "Release with a new tag. Use like this: 'VERSION=v0.0.1 task release'"
    cmds:
      - git-chglog --next-tag ${VERSION} -o CHANGELOG.md
      - git add CHANGELOG.md
      - 'git commit -m "chore: update changelog for ${VERSION}"'
      - git tag ${VERSION}
      - git push origin main ${VERSION}

  chglog:
    desc: Generate CHANGELOG.md
    cmds:
      - git-chglog -o CHANGELOG.md

  test:
    desc: Runs all tests
    cmds:
      - go test ./...

  test:coverage:
    desc: Generate test coverage report
    cmds:
      - go test ./... -coverprofile=cov.out
      - defer: rm cov.out
      - go tool cover -html=cov.out
